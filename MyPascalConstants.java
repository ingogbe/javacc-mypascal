/* Generated By:JJTree&JavaCC: Do not edit this line. MyPascalConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyPascalConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ARITHMETIC_OPERATOR = 6;
  /** RegularExpression Id. */
  int LOGIC_OPERATOR_NOT = 7;
  /** RegularExpression Id. */
  int LOGIC_OPERATOR = 8;
  /** RegularExpression Id. */
  int EQUAL = 9;
  /** RegularExpression Id. */
  int GREATER = 10;
  /** RegularExpression Id. */
  int LESSER = 11;
  /** RegularExpression Id. */
  int RELATIONAL_OPERATOR = 12;
  /** RegularExpression Id. */
  int L_BRACKET = 13;
  /** RegularExpression Id. */
  int R_BRACKET = 14;
  /** RegularExpression Id. */
  int SEMICOLON = 15;
  /** RegularExpression Id. */
  int COMMA = 16;
  /** RegularExpression Id. */
  int PERIOD = 17;
  /** RegularExpression Id. */
  int COLON = 18;
  /** RegularExpression Id. */
  int BEGIN = 19;
  /** RegularExpression Id. */
  int END = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int FOR = 22;
  /** RegularExpression Id. */
  int TO = 23;
  /** RegularExpression Id. */
  int DO = 24;
  /** RegularExpression Id. */
  int IF = 25;
  /** RegularExpression Id. */
  int ELSE = 26;
  /** RegularExpression Id. */
  int THEN = 27;
  /** RegularExpression Id. */
  int VAR = 28;
  /** RegularExpression Id. */
  int PROGRAM = 29;
  /** RegularExpression Id. */
  int FUNCTION = 30;
  /** RegularExpression Id. */
  int END_PERIOD = 31;
  /** RegularExpression Id. */
  int END_SEMICOLON = 32;
  /** RegularExpression Id. */
  int TYPE = 33;
  /** RegularExpression Id. */
  int DIGIT = 34;
  /** RegularExpression Id. */
  int LETTER = 35;
  /** RegularExpression Id. */
  int UNDERLINE = 36;
  /** RegularExpression Id. */
  int APOSTROPHE = 37;
  /** RegularExpression Id. */
  int OTHER_CHAR = 38;
  /** RegularExpression Id. */
  int SPECIAL_CHAR = 39;
  /** RegularExpression Id. */
  int BOOL = 40;
  /** RegularExpression Id. */
  int NUMBER = 41;
  /** RegularExpression Id. */
  int REAL_NUMBER = 42;
  /** RegularExpression Id. */
  int STRING = 43;
  /** RegularExpression Id. */
  int ASSIGNMENT = 44;
  /** RegularExpression Id. */
  int IDENTIFIER = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<ARITHMETIC_OPERATOR>",
    "\"not\"",
    "<LOGIC_OPERATOR>",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "<RELATIONAL_OPERATOR>",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "\"begin\"",
    "\"end\"",
    "\"while\"",
    "\"for\"",
    "\"to\"",
    "\"do\"",
    "\"if\"",
    "\"else\"",
    "\"then\"",
    "\"var\"",
    "\"program\"",
    "\"function\"",
    "<END_PERIOD>",
    "<END_SEMICOLON>",
    "<TYPE>",
    "<DIGIT>",
    "<LETTER>",
    "\"_\"",
    "\"\\\'\"",
    "<OTHER_CHAR>",
    "<SPECIAL_CHAR>",
    "<BOOL>",
    "<NUMBER>",
    "<REAL_NUMBER>",
    "<STRING>",
    "<ASSIGNMENT>",
    "<IDENTIFIER>",
  };

}
